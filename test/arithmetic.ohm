Expr {
  expr
    = addExpr

  addExpr
    = addExpr:x '+':op mulExpr:y    -- plus
    | addExpr:x '-':op mulExpr:y    -- minus
    | mulExpr

  mulExpr
    = mulExpr:x '*':op priExpr:y    -- times
    | mulExpr:x '/':op priExpr:y    -- divide
    | priExpr

  priExpr
    = '(':oparen expr:e ')':cparen  -- paren
    | number

  number  -- number
    = number:n digit:d              -- rec
    | digit
}

